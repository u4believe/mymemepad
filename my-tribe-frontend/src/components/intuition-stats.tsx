'use client';

import { useGetStatsQuery } from '@0xintuition/graphql';

export function IntuitionStats() {
  // Using the generated React Query hook
  // Note: This hook would be generated by @0xintuition/graphql based on your GraphQL schema
  const { data: statsData, isLoading, error } = useGetStatsQuery();

  if (isLoading) {
    return (
      <div className="animate-pulse">
        <div className="h-4 bg-gray-200 rounded w-3/4 mb-2"></div>
        <div className="h-4 bg-gray-200 rounded w-1/2"></div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="text-red-500 text-sm">
        Error loading stats: {error instanceof Error ? error.message : 'Unknown error'}
      </div>
    );
  }

  return (
    <div className="space-y-2">
      <h3 className="text-lg font-semibold">Intuition Stats</h3>
      {statsData && (
        <div className="grid grid-cols-2 gap-4 text-sm">
          <div>
            <span className="text-gray-500">Status:</span>
            <span className="ml-2 font-mono text-green-500">Connected</span>
          </div>
          <div>
            <span className="text-gray-500">API URL:</span>
            <span className="ml-2 font-mono">Local</span>
          </div>
          <div className="col-span-2">
            <span className="text-gray-500">Data:</span>
            <span className="ml-2 font-mono">
              {Object.keys(statsData).length > 0 ? 'Available' : 'No data fields'}
            </span>
          </div>
        </div>
      )}
    </div>
  );
}

// Example of how to use the hook in other components:
/*
import { IntuitionStats } from '@/components/intuition-stats';

function Dashboard() {
  return (
    <div>
      <h1>Dashboard</h1>
      <IntuitionStats />
    </div>
  );
}
*/